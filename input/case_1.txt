registro estudiante
	cadena [10] nombre, segundo_nombre
	cadena [10] apellido
	entero edad
	caracter tipo_sangre
	enteRo matricula
	real promedio
	arreglo[2] de arreglo[3] de cadena[10] arreglo_cadenas
fin registro


// Es posible declarar más de una variable en la misma línea
entero my_integer, variableIwillNOTUse
real the_real_ONE
Booleano boolean
Caracter char
cadena[10] string

entero resultado
funcion exponenciacion(entero base,entero exponente): entero
	inicio
		retorne base^exponente
	fin

procedimiento suma(entero n1,entero n2)
	entero resultado
	inicio
		resultado<-n1+n2
		escriba ("El resultado de la suma es: "),(resultado)
	fin

Inicio

// Las asignaciones no se realizan con =

my_integer <- 2 //para declarar números positivos no se antepone el signo +
the_REAL_ONE <- -4.5682 // para los negativos si se escribe el signo
BOOLEAN <- Verdadero
char <-'a'
striNg <- "Hola mundo"
other_integer <- mY_integer.field
operation <- 56 <> 99
test <- 5 div 3 mod 8

// imprimimos los valores en consola y separados por un espacio
escriba my_integer," ",7.7, -5, the_real_one," ",Boolean," ",char," ",string
escriba 88 <> 33

	resultado <- exponenciacion(2,5)
	resultado <- exponenciacion(2,5, 3, 2)
	escriba "El resultado de la operacion es: ",resultado
	escriba "22222 <> 6666"



caso variable
  1,2,3:
  	escriba("Es un número entero entre 1 y 3")
  4:
  	escriba("Es el número 4")
  5:
  	escriba("Es el número 5")
  sino:
  	escriba("No sé qué número es modo:/")

  fin caso


   si (5^2 = 25) y (25 mod 5 = 0) o (5 * 2 = 12) entonces
   // Este código si funciona

   /* Se agrupan primero
   expresiones aritméticas y
   relacionales */

   escriba "el 25 es poderoso"

   fin si

si numero=100 entonces
		escriba "El número es 100"
	      sino si numero>100 entonces
		    escriba "El número es mayor que 100"
	          sino
		        escriba "El número es menor que 100"
	      fin si
      fin si

    mientras i<=10 haga
    	 escriba "Valor de i: ",(i)
    	 si i<>10 entonces
    	 	llamar nueva_linea
    	 fin si
    	 i<-i+1
    	fin mientras

repita
 escriba ("Valor del acumulador en la iteracion: "),(acumulador)
		llamar nueva_linea
		i<-i+1
		acumulador<-acumulador+(i*2)
 hasta (i=20) o (acumulador mod 5=4)


 Para I<- 1 hasta 4 haga
 		Para K<- 1 hasta 5 haga
 			Escriba I
 		Fin para
 		Llamar nueva_linea
 	Fin para


FIN
